name: Build and Push to Docker Hub, Deploy to GCP

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Backend Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: my-api/myapi-backend
          dockerfile: Dockerfile
          registry: docker.io
          tags: latest, ${{ github.sha }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # Build and push the microservice
      - name: Build and push API Monitor Worker(Golang)
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: my-api/myapi-microservice
          dockerfile: ./api-monitor-worker/Dockerfile
          registry: docker.io
          tags: latest, ${{ github.sha }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  deploy-to-gcp:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true
      
      - name: Deploy Backend to Cloud Run
        run: |
          gcloud run deploy myapi-backend \
            --image=jedit/myapi-backend:${{ github.sha }} \
            --platform=managed \
            --region=europe-west2 \
            --set-env-vars="GITHUB_CLIENT_ID=${{ secrets.GIT_CLIENT_ID }},GITHUB_CLIENT_SECRET=${{ secrets.GIT_CLIENT_SECRET }},GITHUB_CALLBACK_URL=${{ secrets.GIT_CALLBACK_URL }},FRONTEND_URL=${{ secrets.FRONTEND_URL }},JWT_SECRET=${{ secrets.JWT_SECRET }},MONGODB_URI=${{ secrets.MONGODB_URI }},PORT=${{ secrets.PORT }}" \
            --allow-unauthenticated
      - name: Deploy Go microservice to Cloud Run
        run: |
          gcloud run deploy myapi-microservice \
            --image=jedit/myapi-microservice:${{ github.sha }} \
            --platform=managed \
            --region=europe-west2 \
            --set-env-vars="MONGODB_URI=${{ secrets.MONGODB_URI }},DB_NAME=${{ secrets.DB_NAME }}" \
            --allow-unauthenticated